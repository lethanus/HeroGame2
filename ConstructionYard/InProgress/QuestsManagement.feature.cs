// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ConstructionYard.InProgress
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Quests management", SourceFile="InProgress\\QuestsManagement.feature", SourceLine=0)]
    public partial class QuestsManagementFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "QuestsManagement.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Quests management", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01 Generating one quest", new string[] {
                "mytag"}, SourceLine=4)]
        public virtual void _01GeneratingOneQuest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01 Generating one quest", null, new string[] {
                        "mytag"});
#line 5
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level",
                        "Name",
                        "HP_range",
                        "Min_Attack_range",
                        "Defence_range",
                        "Speed_range",
                        "Attack_add_for_max"});
            table1.AddRow(new string[] {
                        "1",
                        "Goblin",
                        "18-22",
                        "8-12",
                        "8-12",
                        "8-10",
                        "4"});
            table1.AddRow(new string[] {
                        "2",
                        "Goblin",
                        "22-26",
                        "12-16",
                        "10-14",
                        "9-11",
                        "5"});
            table1.AddRow(new string[] {
                        "3",
                        "Goblin",
                        "26-34",
                        "16-24",
                        "12-16",
                        "10-12",
                        "7"});
            table1.AddRow(new string[] {
                        "4",
                        "Goblin",
                        "40-55",
                        "30-40",
                        "18-22",
                        "11-13",
                        "10"});
#line 6
 testRunner.Given("Some mercenary templates", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Name",
                        "Level",
                        "F1",
                        "F2",
                        "F3",
                        "M1",
                        "M2",
                        "M3",
                        "M4",
                        "R1",
                        "R2",
                        "R3"});
            table2.AddRow(new string[] {
                        "T_1",
                        "Goblin pack",
                        "1",
                        "Goblin@1",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 12
 testRunner.And("Have some formation templates", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Login",
                        "Password"});
            table3.AddRow(new string[] {
                        "ID_1",
                        "test",
                        "test"});
#line 15
 testRunner.And("Some accounts exists in system", ((string)(null)), table3, "And ");
#line 18
 testRunner.And("I try to login for \'test\' and password \'test\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
 testRunner.And("Number of quest to be generated is \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
 testRunner.And("The chance of getting level \'1\' quests is set to \'10000\' of \'10000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
 testRunner.And("The chance of getting level \'2\' quests is set to \'2500\' of \'10000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
 testRunner.And("The chance of getting level \'3\' quests is set to \'1000\' of \'10000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.And("The chance of getting level \'4\' quests is set to \'100\' of \'10000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
 testRunner.And("Randomzer for quests level will always return \'9000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.When("Player will refresh and regenerate quests", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Level",
                        "Name",
                        "FormationID",
                        "WinRewards"});
            table4.AddRow(new string[] {
                        "Q_1",
                        "1",
                        "Defeat - Goblin pack",
                        "T_1",
                        ""});
#line 26
 testRunner.Then("List of quests should contain", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("02 Generating three the same quests", SourceLine=30)]
        public virtual void _02GeneratingThreeTheSameQuests()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02 Generating three the same quests", null, ((string[])(null)));
#line 31
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level",
                        "Name",
                        "HP_range",
                        "Min_Attack_range",
                        "Defence_range",
                        "Speed_range",
                        "Attack_add_for_max"});
            table5.AddRow(new string[] {
                        "1",
                        "Goblin",
                        "18-22",
                        "8-12",
                        "8-12",
                        "8-10",
                        "4"});
            table5.AddRow(new string[] {
                        "2",
                        "Goblin",
                        "22-26",
                        "12-16",
                        "10-14",
                        "9-11",
                        "5"});
            table5.AddRow(new string[] {
                        "3",
                        "Goblin",
                        "26-34",
                        "16-24",
                        "12-16",
                        "10-12",
                        "7"});
            table5.AddRow(new string[] {
                        "4",
                        "Goblin",
                        "40-55",
                        "30-40",
                        "18-22",
                        "11-13",
                        "10"});
#line 32
 testRunner.Given("Some mercenary templates", ((string)(null)), table5, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Name",
                        "Level",
                        "F1",
                        "F2",
                        "F3",
                        "M1",
                        "M2",
                        "M3",
                        "M4",
                        "R1",
                        "R2",
                        "R3"});
            table6.AddRow(new string[] {
                        "T_1",
                        "Goblin pack",
                        "1",
                        "Goblin@1",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 38
 testRunner.And("Have some formation templates", ((string)(null)), table6, "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Login",
                        "Password"});
            table7.AddRow(new string[] {
                        "ID_1",
                        "test",
                        "test"});
#line 41
 testRunner.And("Some accounts exists in system", ((string)(null)), table7, "And ");
#line 44
 testRunner.And("I try to login for \'test\' and password \'test\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
 testRunner.And("Number of quest to be generated is \'3\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 46
 testRunner.And("The chance of getting level \'1\' quests is set to \'10000\' of \'10000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
 testRunner.And("The chance of getting level \'2\' quests is set to \'2500\' of \'10000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
 testRunner.And("The chance of getting level \'3\' quests is set to \'1000\' of \'10000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
 testRunner.And("The chance of getting level \'4\' quests is set to \'100\' of \'10000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 testRunner.And("Randomzer for quests level will always return \'9000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
 testRunner.When("Player will refresh and regenerate quests", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Level",
                        "Name",
                        "FormationID",
                        "WinRewards"});
            table8.AddRow(new string[] {
                        "Q_1",
                        "1",
                        "Defeat - Goblin pack",
                        "T_1",
                        ""});
            table8.AddRow(new string[] {
                        "Q_2",
                        "1",
                        "Defeat - Goblin pack",
                        "T_1",
                        ""});
            table8.AddRow(new string[] {
                        "Q_3",
                        "1",
                        "Defeat - Goblin pack",
                        "T_1",
                        ""});
#line 52
 testRunner.Then("List of quests should contain", ((string)(null)), table8, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("03 Generating one level 4 quest", SourceLine=58)]
        public virtual void _03GeneratingOneLevel4Quest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03 Generating one level 4 quest", null, ((string[])(null)));
#line 59
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level",
                        "Name",
                        "HP_range",
                        "Min_Attack_range",
                        "Defence_range",
                        "Speed_range",
                        "Attack_add_for_max"});
            table9.AddRow(new string[] {
                        "1",
                        "Goblin",
                        "18-22",
                        "8-12",
                        "8-12",
                        "8-10",
                        "4"});
            table9.AddRow(new string[] {
                        "2",
                        "Goblin",
                        "22-26",
                        "12-16",
                        "10-14",
                        "9-11",
                        "5"});
            table9.AddRow(new string[] {
                        "3",
                        "Goblin",
                        "26-34",
                        "16-24",
                        "12-16",
                        "10-12",
                        "7"});
            table9.AddRow(new string[] {
                        "4",
                        "Goblin",
                        "40-55",
                        "30-40",
                        "18-22",
                        "11-13",
                        "10"});
#line 60
 testRunner.Given("Some mercenary templates", ((string)(null)), table9, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Name",
                        "Level",
                        "F1",
                        "F2",
                        "F3",
                        "M1",
                        "M2",
                        "M3",
                        "M4",
                        "R1",
                        "R2",
                        "R3"});
            table10.AddRow(new string[] {
                        "T_1",
                        "Goblin pack",
                        "1",
                        "Goblin@1",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table10.AddRow(new string[] {
                        "T_4",
                        "Goblin pack",
                        "4",
                        "Goblin@1",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 66
 testRunner.And("Have some formation templates", ((string)(null)), table10, "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Login",
                        "Password"});
            table11.AddRow(new string[] {
                        "ID_1",
                        "test",
                        "test"});
#line 70
 testRunner.And("Some accounts exists in system", ((string)(null)), table11, "And ");
#line 73
 testRunner.And("I try to login for \'test\' and password \'test\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
 testRunner.And("Number of quest to be generated is \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
 testRunner.And("The chance of getting level \'1\' quests is set to \'10000\' of \'10000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
 testRunner.And("The chance of getting level \'2\' quests is set to \'2500\' of \'10000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
 testRunner.And("The chance of getting level \'3\' quests is set to \'1000\' of \'10000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
 testRunner.And("The chance of getting level \'4\' quests is set to \'100\' of \'10000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
 testRunner.And("Randomzer for quests level will always return \'90\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
 testRunner.When("Player will refresh and regenerate quests", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Level",
                        "Name",
                        "FormationID",
                        "WinRewards"});
            table12.AddRow(new string[] {
                        "Q_1",
                        "4",
                        "Defeat - Goblin pack",
                        "T_4",
                        ""});
#line 81
 testRunner.Then("List of quests should contain", ((string)(null)), table12, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("04 Generating different quests for level 2", SourceLine=85)]
        public virtual void _04GeneratingDifferentQuestsForLevel2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04 Generating different quests for level 2", null, ((string[])(null)));
#line 86
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level",
                        "Name",
                        "HP_range",
                        "Min_Attack_range",
                        "Defence_range",
                        "Speed_range",
                        "Attack_add_for_max"});
            table13.AddRow(new string[] {
                        "1",
                        "Goblin",
                        "18-22",
                        "8-12",
                        "8-12",
                        "8-10",
                        "4"});
            table13.AddRow(new string[] {
                        "2",
                        "Goblin",
                        "22-26",
                        "12-16",
                        "10-14",
                        "9-11",
                        "5"});
            table13.AddRow(new string[] {
                        "3",
                        "Goblin",
                        "26-34",
                        "16-24",
                        "12-16",
                        "10-12",
                        "7"});
            table13.AddRow(new string[] {
                        "4",
                        "Goblin",
                        "40-55",
                        "30-40",
                        "18-22",
                        "11-13",
                        "10"});
#line 87
 testRunner.Given("Some mercenary templates", ((string)(null)), table13, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Name",
                        "Level",
                        "F1",
                        "F2",
                        "F3",
                        "M1",
                        "M2",
                        "M3",
                        "M4",
                        "R1",
                        "R2",
                        "R3"});
            table14.AddRow(new string[] {
                        "T_1",
                        "Goblin pack",
                        "2",
                        "Goblin@1",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table14.AddRow(new string[] {
                        "T_2",
                        "Ork pack",
                        "2",
                        "Goblin@1",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table14.AddRow(new string[] {
                        "T_3",
                        "Elf pack",
                        "2",
                        "Goblin@1",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 93
 testRunner.And("Have some formation templates", ((string)(null)), table14, "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Login",
                        "Password"});
            table15.AddRow(new string[] {
                        "ID_1",
                        "test",
                        "test"});
#line 98
 testRunner.And("Some accounts exists in system", ((string)(null)), table15, "And ");
#line 101
 testRunner.And("I try to login for \'test\' and password \'test\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
 testRunner.And("Number of quest to be generated is \'1000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
 testRunner.And("The chance of getting level \'1\' quests is set to \'10000\' of \'10000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 104
 testRunner.And("The chance of getting level \'2\' quests is set to \'2500\' of \'10000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 105
 testRunner.And("The chance of getting level \'3\' quests is set to \'1000\' of \'10000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
 testRunner.And("The chance of getting level \'4\' quests is set to \'100\' of \'10000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 107
 testRunner.And("Randomzer for quests level will always return \'2300\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 108
 testRunner.When("Player will refresh and regenerate quests", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 109
 testRunner.Then("List of quests should contain at least \'10\' quests with FormationID \'T_1\' and Lev" +
                    "el \'2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 110
 testRunner.And("List of quests should contain at least \'10\' quests with FormationID \'T_2\' and Lev" +
                    "el \'2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 111
 testRunner.And("List of quests should contain at least \'10\' quests with FormationID \'T_3\' and Lev" +
                    "el \'2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("05 Generating reward for quest on level 1", SourceLine=112)]
        public virtual void _05GeneratingRewardForQuestOnLevel1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("05 Generating reward for quest on level 1", null, ((string[])(null)));
#line 113
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level",
                        "Name",
                        "HP_range",
                        "Min_Attack_range",
                        "Defence_range",
                        "Speed_range",
                        "Attack_add_for_max"});
            table16.AddRow(new string[] {
                        "1",
                        "Goblin",
                        "18-22",
                        "8-12",
                        "8-12",
                        "8-10",
                        "4"});
            table16.AddRow(new string[] {
                        "2",
                        "Goblin",
                        "22-26",
                        "12-16",
                        "10-14",
                        "9-11",
                        "5"});
            table16.AddRow(new string[] {
                        "3",
                        "Goblin",
                        "26-34",
                        "16-24",
                        "12-16",
                        "10-12",
                        "7"});
            table16.AddRow(new string[] {
                        "4",
                        "Goblin",
                        "40-55",
                        "30-40",
                        "18-22",
                        "11-13",
                        "10"});
#line 114
 testRunner.Given("Some mercenary templates", ((string)(null)), table16, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Name",
                        "Level",
                        "F1",
                        "F2",
                        "F3",
                        "M1",
                        "M2",
                        "M3",
                        "M4",
                        "R1",
                        "R2",
                        "R3"});
            table17.AddRow(new string[] {
                        "T_1",
                        "Goblin pack",
                        "1",
                        "Goblin@1",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 120
 testRunner.And("Have some formation templates", ((string)(null)), table17, "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Login",
                        "Password"});
            table18.AddRow(new string[] {
                        "ID_1",
                        "test",
                        "test"});
#line 123
 testRunner.And("Some accounts exists in system", ((string)(null)), table18, "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Name",
                        "Category",
                        "Level"});
            table19.AddRow(new string[] {
                        "TR_1",
                        "Beer",
                        "Rewards",
                        "1"});
            table19.AddRow(new string[] {
                        "TR_2",
                        "Wine",
                        "Rewards",
                        "2"});
            table19.AddRow(new string[] {
                        "TR_3",
                        "Wodka",
                        "Rewards",
                        "3"});
            table19.AddRow(new string[] {
                        "TR_4",
                        "Rum",
                        "Rewards",
                        "4"});
#line 126
 testRunner.And("Items dictionary contains items below", ((string)(null)), table19, "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Rewards",
                        "Level"});
            table20.AddRow(new string[] {
                        "R_1",
                        "1xBeer",
                        "1"});
            table20.AddRow(new string[] {
                        "R_2",
                        "1xWine",
                        "2"});
#line 132
 testRunner.And("Reward templates have", ((string)(null)), table20, "And ");
#line 136
 testRunner.And("I try to login for \'test\' and password \'test\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 137
 testRunner.And("Number of quest to be generated is \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 138
 testRunner.And("The chance of getting level \'1\' quests is set to \'10000\' of \'10000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 139
 testRunner.And("The chance of getting level \'2\' quests is set to \'2500\' of \'10000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 140
 testRunner.And("The chance of getting level \'3\' quests is set to \'1000\' of \'10000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 141
 testRunner.And("The chance of getting level \'4\' quests is set to \'100\' of \'10000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 142
 testRunner.And("Randomzer for quests level will always return \'9000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 143
 testRunner.When("Player will refresh and regenerate quests", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Level",
                        "Name",
                        "FormationID",
                        "WinRewards"});
            table21.AddRow(new string[] {
                        "Q_1",
                        "1",
                        "Defeat - Goblin pack",
                        "T_1",
                        "R_1"});
#line 144
 testRunner.Then("List of quests should contain", ((string)(null)), table21, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("06 Generating reward for quests on level 2", SourceLine=148)]
        public virtual void _06GeneratingRewardForQuestsOnLevel2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("06 Generating reward for quests on level 2", null, ((string[])(null)));
#line 149
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level",
                        "Name",
                        "HP_range",
                        "Min_Attack_range",
                        "Defence_range",
                        "Speed_range",
                        "Attack_add_for_max"});
            table22.AddRow(new string[] {
                        "1",
                        "Goblin",
                        "18-22",
                        "8-12",
                        "8-12",
                        "8-10",
                        "4"});
            table22.AddRow(new string[] {
                        "2",
                        "Goblin",
                        "22-26",
                        "12-16",
                        "10-14",
                        "9-11",
                        "5"});
            table22.AddRow(new string[] {
                        "3",
                        "Goblin",
                        "26-34",
                        "16-24",
                        "12-16",
                        "10-12",
                        "7"});
            table22.AddRow(new string[] {
                        "4",
                        "Goblin",
                        "40-55",
                        "30-40",
                        "18-22",
                        "11-13",
                        "10"});
#line 150
 testRunner.Given("Some mercenary templates", ((string)(null)), table22, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Name",
                        "Level",
                        "F1",
                        "F2",
                        "F3",
                        "M1",
                        "M2",
                        "M3",
                        "M4",
                        "R1",
                        "R2",
                        "R3"});
            table23.AddRow(new string[] {
                        "T_1",
                        "Goblin pack",
                        "2",
                        "Goblin@1",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 156
 testRunner.And("Have some formation templates", ((string)(null)), table23, "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Login",
                        "Password"});
            table24.AddRow(new string[] {
                        "ID_1",
                        "test",
                        "test"});
#line 159
 testRunner.And("Some accounts exists in system", ((string)(null)), table24, "And ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Name",
                        "Category",
                        "Level"});
            table25.AddRow(new string[] {
                        "TR_1",
                        "Beer",
                        "Rewards",
                        "1"});
            table25.AddRow(new string[] {
                        "TR_2",
                        "Wine",
                        "Rewards",
                        "2"});
            table25.AddRow(new string[] {
                        "TR_3",
                        "Wodka",
                        "Rewards",
                        "3"});
            table25.AddRow(new string[] {
                        "TR_4",
                        "Rum",
                        "Rewards",
                        "4"});
#line 162
 testRunner.And("Items dictionary contains items below", ((string)(null)), table25, "And ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Rewards",
                        "Level"});
            table26.AddRow(new string[] {
                        "R_1",
                        "1xBeer",
                        "1"});
            table26.AddRow(new string[] {
                        "R_2",
                        "1xWine",
                        "2"});
#line 168
 testRunner.And("Reward templates have", ((string)(null)), table26, "And ");
#line 172
 testRunner.And("I try to login for \'test\' and password \'test\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 173
 testRunner.And("Number of quest to be generated is \'2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 174
 testRunner.And("The chance of getting level \'1\' quests is set to \'10000\' of \'10000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 175
 testRunner.And("The chance of getting level \'2\' quests is set to \'2500\' of \'10000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 176
 testRunner.And("The chance of getting level \'3\' quests is set to \'1000\' of \'10000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 177
 testRunner.And("The chance of getting level \'4\' quests is set to \'100\' of \'10000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 178
 testRunner.And("Randomzer for quests level will always return \'2400\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 179
 testRunner.When("Player will refresh and regenerate quests", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Level",
                        "Name",
                        "FormationID",
                        "WinRewards"});
            table27.AddRow(new string[] {
                        "Q_1",
                        "2",
                        "Defeat - Goblin pack",
                        "T_1",
                        "R_2"});
            table27.AddRow(new string[] {
                        "Q_2",
                        "2",
                        "Defeat - Goblin pack",
                        "T_1",
                        "R_2"});
#line 180
 testRunner.Then("List of quests should contain", ((string)(null)), table27, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("07 Generating different quests for level 2 with rewards", SourceLine=185)]
        public virtual void _07GeneratingDifferentQuestsForLevel2WithRewards()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("07 Generating different quests for level 2 with rewards", null, ((string[])(null)));
#line 186
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level",
                        "Name",
                        "HP_range",
                        "Min_Attack_range",
                        "Defence_range",
                        "Speed_range",
                        "Attack_add_for_max"});
            table28.AddRow(new string[] {
                        "1",
                        "Goblin",
                        "18-22",
                        "8-12",
                        "8-12",
                        "8-10",
                        "4"});
            table28.AddRow(new string[] {
                        "2",
                        "Goblin",
                        "22-26",
                        "12-16",
                        "10-14",
                        "9-11",
                        "5"});
            table28.AddRow(new string[] {
                        "3",
                        "Goblin",
                        "26-34",
                        "16-24",
                        "12-16",
                        "10-12",
                        "7"});
            table28.AddRow(new string[] {
                        "4",
                        "Goblin",
                        "40-55",
                        "30-40",
                        "18-22",
                        "11-13",
                        "10"});
#line 187
 testRunner.Given("Some mercenary templates", ((string)(null)), table28, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Name",
                        "Level",
                        "F1",
                        "F2",
                        "F3",
                        "M1",
                        "M2",
                        "M3",
                        "M4",
                        "R1",
                        "R2",
                        "R3"});
            table29.AddRow(new string[] {
                        "T_1",
                        "Goblin pack",
                        "2",
                        "Goblin@1",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table29.AddRow(new string[] {
                        "T_2",
                        "Ork pack",
                        "2",
                        "Goblin@1",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table29.AddRow(new string[] {
                        "T_3",
                        "Elf pack",
                        "2",
                        "Goblin@1",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 193
 testRunner.And("Have some formation templates", ((string)(null)), table29, "And ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Login",
                        "Password"});
            table30.AddRow(new string[] {
                        "ID_1",
                        "test",
                        "test"});
#line 198
 testRunner.And("Some accounts exists in system", ((string)(null)), table30, "And ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Name",
                        "Category",
                        "Level"});
            table31.AddRow(new string[] {
                        "TR_1",
                        "Beer",
                        "Rewards",
                        "1"});
            table31.AddRow(new string[] {
                        "TR_2",
                        "Wine",
                        "Rewards",
                        "2"});
            table31.AddRow(new string[] {
                        "TR_3",
                        "Wodka",
                        "Rewards",
                        "3"});
            table31.AddRow(new string[] {
                        "TR_4",
                        "Rum",
                        "Rewards",
                        "4"});
#line 201
 testRunner.And("Items dictionary contains items below", ((string)(null)), table31, "And ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Rewards",
                        "Level"});
            table32.AddRow(new string[] {
                        "R_1",
                        "1xBeer",
                        "2"});
            table32.AddRow(new string[] {
                        "R_2",
                        "1xWine",
                        "2"});
            table32.AddRow(new string[] {
                        "R_3",
                        "1xRum",
                        "2"});
#line 207
 testRunner.And("Reward templates have", ((string)(null)), table32, "And ");
#line 212
 testRunner.And("I try to login for \'test\' and password \'test\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 213
 testRunner.And("Number of quest to be generated is \'1000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 214
 testRunner.And("The chance of getting level \'1\' quests is set to \'10000\' of \'10000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 215
 testRunner.And("The chance of getting level \'2\' quests is set to \'2500\' of \'10000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 216
 testRunner.And("The chance of getting level \'3\' quests is set to \'1000\' of \'10000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 217
 testRunner.And("The chance of getting level \'4\' quests is set to \'100\' of \'10000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 218
 testRunner.And("Randomzer for quests level will always return \'2300\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 219
 testRunner.When("Player will refresh and regenerate quests", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 220
 testRunner.Then("List of quests should contain at least \'10\' quests with Rewards using template \'R" +
                    "_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 221
 testRunner.And("List of quests should contain at least \'10\' quests with Rewards using template \'R" +
                    "_2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 222
 testRunner.And("List of quests should contain at least \'10\' quests with Rewards using template \'R" +
                    "_3\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
