// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ConstructionYard.InProgress
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Quests management", SourceFile="InProgress\\QuestsManagement.feature", SourceLine=0)]
    public partial class QuestsManagementFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "QuestsManagement.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Quests management", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01 Generating one quest", new string[] {
                "mytag"}, SourceLine=4)]
        public virtual void _01GeneratingOneQuest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01 Generating one quest", null, new string[] {
                        "mytag"});
#line 5
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level",
                        "Name",
                        "HP_range",
                        "Min_Attack_range",
                        "Defence_range",
                        "Speed_range",
                        "Attack_add_for_max"});
            table1.AddRow(new string[] {
                        "1",
                        "Goblin",
                        "18-22",
                        "8-12",
                        "8-12",
                        "8-10",
                        "4"});
            table1.AddRow(new string[] {
                        "2",
                        "Goblin",
                        "22-26",
                        "12-16",
                        "10-14",
                        "9-11",
                        "5"});
            table1.AddRow(new string[] {
                        "3",
                        "Goblin",
                        "26-34",
                        "16-24",
                        "12-16",
                        "10-12",
                        "7"});
            table1.AddRow(new string[] {
                        "4",
                        "Goblin",
                        "40-55",
                        "30-40",
                        "18-22",
                        "11-13",
                        "10"});
#line 6
 testRunner.Given("Some mercenary templates", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Name",
                        "Level",
                        "F1",
                        "F2",
                        "F3",
                        "M1",
                        "M2",
                        "M3",
                        "M4",
                        "R1",
                        "R2",
                        "R3"});
            table2.AddRow(new string[] {
                        "T_1",
                        "Goblin pack",
                        "1",
                        "Goblin@1",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 12
 testRunner.And("Have some formation templates", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Login",
                        "Password"});
            table3.AddRow(new string[] {
                        "ID_1",
                        "test",
                        "test"});
#line 15
 testRunner.And("Some accounts exists in system", ((string)(null)), table3, "And ");
#line 18
 testRunner.And("I try to login for \'test\' and password \'test\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
 testRunner.And("Number of quest to be generated is \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
 testRunner.When("Player will refresh and regenerate quests", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Level",
                        "Name",
                        "FormationID",
                        "WinRewards"});
            table4.AddRow(new string[] {
                        "Q_1",
                        "1",
                        "Defeat - Goblin pack",
                        "T_1",
                        ""});
#line 21
 testRunner.Then("List of quests should contain", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("02 Generating three the same quests", SourceLine=25)]
        public virtual void _02GeneratingThreeTheSameQuests()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02 Generating three the same quests", null, ((string[])(null)));
#line 26
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level",
                        "Name",
                        "HP_range",
                        "Min_Attack_range",
                        "Defence_range",
                        "Speed_range",
                        "Attack_add_for_max"});
            table5.AddRow(new string[] {
                        "1",
                        "Goblin",
                        "18-22",
                        "8-12",
                        "8-12",
                        "8-10",
                        "4"});
            table5.AddRow(new string[] {
                        "2",
                        "Goblin",
                        "22-26",
                        "12-16",
                        "10-14",
                        "9-11",
                        "5"});
            table5.AddRow(new string[] {
                        "3",
                        "Goblin",
                        "26-34",
                        "16-24",
                        "12-16",
                        "10-12",
                        "7"});
            table5.AddRow(new string[] {
                        "4",
                        "Goblin",
                        "40-55",
                        "30-40",
                        "18-22",
                        "11-13",
                        "10"});
#line 27
 testRunner.Given("Some mercenary templates", ((string)(null)), table5, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Name",
                        "Level",
                        "F1",
                        "F2",
                        "F3",
                        "M1",
                        "M2",
                        "M3",
                        "M4",
                        "R1",
                        "R2",
                        "R3"});
            table6.AddRow(new string[] {
                        "T_1",
                        "Goblin pack",
                        "1",
                        "Goblin@1",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 33
 testRunner.And("Have some formation templates", ((string)(null)), table6, "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Login",
                        "Password"});
            table7.AddRow(new string[] {
                        "ID_1",
                        "test",
                        "test"});
#line 36
 testRunner.And("Some accounts exists in system", ((string)(null)), table7, "And ");
#line 39
 testRunner.And("I try to login for \'test\' and password \'test\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.And("Number of quest to be generated is \'3\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.When("Player will refresh and regenerate quests", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Level",
                        "Name",
                        "FormationID",
                        "WinRewards"});
            table8.AddRow(new string[] {
                        "Q_1",
                        "1",
                        "Defeat - Goblin pack",
                        "T_1",
                        ""});
            table8.AddRow(new string[] {
                        "Q_2",
                        "1",
                        "Defeat - Goblin pack",
                        "T_1",
                        ""});
            table8.AddRow(new string[] {
                        "Q_3",
                        "1",
                        "Defeat - Goblin pack",
                        "T_1",
                        ""});
#line 42
 testRunner.Then("List of quests should contain", ((string)(null)), table8, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
